openapi: 3.0.0
info:
  title: DossierData Customer API
  version: ""
  description: Welcome to the **DossierData Customer API**. This API provides access to a all data
    of you as a customer from a tenant within DossierData.
paths:
  /protected:
    get:
      responses:
        200:
          description: OK
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                required:
                  - status
              examples:
                response:
                  value:
                    status: ok
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: Query Example
      description: ""
      tags:
        - Authentication
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
        - name: token
          in: query
          description: ""
          required: true
          example: vr5HmMkzlxKE70W1y4MibiJUusZwZC25NOVBEx3BD1
          schema:
            type: string
  /oauth/access_token#customer_password:
    post:
      responses:
        200:
          description: OK
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Your new oauth access token
                  token_type:
                    type: string
                    description: The token type
                  expires_in:
                    type: number
                    description: The number of seconds this token is valid for
                  refresh_token:
                    type: string
                    description: The refresh token that can be used to request a new access
                      token when the old one expires or is about to expire.
              examples:
                response:
                  value:
                    access_token: A7NoRur7CJVbhRPGKjA2l4uCenFRgpR4klOgtMu0
                    token_type: Bearer
                    expires_in: 86400
                    refresh_token: 7jQTFMTE9ZVpu5CvHdYPQgIBwdynu53qlagx7uLK
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: Access token
      description: Requesting the oauth access token.
      tags:
        - Authorization
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_id:
                  type: string
                  description: Your client id
                client_secret:
                  type: string
                  description: Your client secret
                grant_type:
                  type: string
                  description: The grant type
                username:
                  type: string
                  description: The users username
                password:
                  type: string
                  description: The users password
                scope:
                  type: string
                  description: The requested scopes
              required:
                - client_id
                - client_secret
                - grant_type
                - username
                - password
                - scope
              example:
                client_id: d5fb86ec-60a0-49fe-95710-3615d74843ac
                client_secret: 4d768389b2e9e9d5584a165204d72235c3c75401
                grant_type: customer_password
                username: johndoe
                password: secret
                scope: customer_api:customer customer_api:tenant
  /oauth/access_token#refresh_token:
    post:
      responses:
        200:
          description: OK
          headers: { }
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: Your new oauth access token
                  token_type:
                    type: string
                    description: The token type
                  expires_in:
                    type: number
                    description: The number of seconds this token is valid for
                  refresh_token:
                    type: string
                    description: The refresh token that can be used to request a new access
                      token when the old one expires or is about to expire.
              examples:
                response:
                  value:
                    access_token: A7NoRur7CJVbhRPGKjA2l4uCenFRgpR4klOgtMu0
                    token_type: Bearer
                    expires_in: 86400
                    refresh_token: 7jQTFMTE9ZVpu5CvHdYPQgIBwdynu53qlagx7uLK
        400:
          $ref: '#/components/responses/BadScopeRequest'
        401:
          $ref: '#/components/responses/ClientUnauthorized'
      summary: Refresh Token
      description: Refreshing an oauth access token by the refresh token.
      tags:
        - Authorization
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  description: Specify the refresh grant type
                refresh_token:
                  type: string
                  description: The refresh token provided to you when you first requested
                    the access token.
              required:
                - grant_type
                - refresh_token
              example:
                grant_type: refresh_token
                refresh_token: 7jQTFMTE9ZVpu5CvHdYPQgIBwdynu53qlagx7uLK
  /customer:
    get:
      responses:
        200:
          $ref: '#/components/responses/Customer'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all resources
      description: Get a the current customer.
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:customer
  /customer/partner:
    get:
      responses:
        200:
          $ref: '#/components/responses/Customer'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all resources
      description: Get a the current customer.
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:customer
  /customer/children:
    get:
      responses:
        200:
          $ref: '#/components/responses/Customer'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all resources
      description: Get a the current customer.
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:customer

  /customer/family:
    get:
      responses:
        200:
          $ref: '#/components/responses/Family'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all family members
      description: Get a the current family.
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:customer

  /customer/messages:
    get:
      responses:
        200:
          $ref: '#/components/responses/MessagesResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all family members
      description: Get a the current family.
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:customer_messages
    post:
      responses:
        200:
          $ref: '#/components/responses/PostMessageResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all family members
      description: Get a the current family.
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:customer_messages

  /customer/messages/:message_id/read:
    post:
      responses:
        200:
          $ref: '#/components/responses/PostMessageResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all family members
      description: Get a the current family.
      tags:
        - Customer
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:customer_messages

  /document:
    get:
      responses:
        200:
          $ref: '#/components/responses/DocumentsTreeResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all resources
      description: Get a paginated list of all documents.
      tags:
        - Document
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:documents
  /document/upload:
    post:
      responses:
        200:
          $ref: '#/components/responses/Created'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: Upload a document
      description: Upload a document.
      tags:
        - Document
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:documents
      requestBody:
        $ref: "#/components/requestBodies/CreateDocument"
  /document/:document_id:
    get:
      responses:
        200:
          $ref: '#/components/responses/DocumentResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: Download a resources
      description: Download a document.
      tags:
        - Document
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
        - $ref: '#/components/parameters/DocumentId'
      security:
        - oauth2:
            - customer_api:documents

  /living:
    get:
      responses:
        200:
          $ref: '#/components/responses/LivingResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all family members
      description: Get a the current family.
      tags:
        - Living
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:living

  /mortgage:
    get:
      responses:
        200:
          $ref: '#/components/responses/Mortgage'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all family members
      description: Get a the current family.
      tags:
        - Mortgage
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:mortgages

  /mortgage/:mortgage_id/document:
    get:
      responses:
        200:
          $ref: '#/components/responses/DocumentResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all documents
      description: Get all publicized the documents linked to this mortgage.
      tags:
        - Mortgage
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:mortgages
            - customer_api:documents

  /mortgage/:mortgage_id/progress:
    get:
      responses:
        200:
          $ref: '#/components/responses/MortgageProgressResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all progress items
      description: Get all progress items linked to this mortgage.
      tags:
        - Mortgage
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:customer
            - customer_api:mortgages
  /damage:
    get:
      responses:
        200:
          $ref: '#/components/responses/Damage'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all family members
      description: Get a the current family.
      tags:
        - Damage
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:damages

  /damage/:damage_id/document:
    get:
      responses:
        200:
          $ref: '#/components/responses/DocumentResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all family members
      description: Get a the current family.
      tags:
        - Damage
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:damages
            - customer_api:documents

  /policy:
    get:
      responses:
        200:
          $ref: '#/components/responses/PolicyResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all policies
      description: Get a the current customers policies.
      tags:
        - Policy
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:policies

  /policy/:policy_id/document:
    get:
      responses:
        200:
          $ref: '#/components/responses/DocumentResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all policy documents
      description: Get a the current customers policy document.
      tags:
        - Policy
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:policies
            - customer_api:documents

  /tenant:
    get:
      responses:
        200:
          $ref: '#/components/responses/TenantInfoResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: Get tenant info
      description: Get the current tenant info, e.g. name, logo's, slogans, etc.
      tags:
        - Tenant
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:tenant

  /task:
    get:
      responses:
        200:
          $ref: '#/components/responses/TaskResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
      summary: List all tasks
      description: Get the current customers tasks.
      tags:
        - Task
      parameters:
        - $ref: '#/components/parameters/JsonHeader'
      security:
        - oauth2:
            - customer_api:tasks

tags:
  - name: Authentication
    description: >-
      This section describes the authentication process.

      ### OAuth2
      Authentication is done based on OAuth2. Tokens have an expiration time of ***24 hours*** and can be refreshed
      ***30 days*** after they were generated.

      #### Client
      To use the api you need to request an OAuth client with which you can request an access token.


      In your request you need to supply the following:
      * Company details
      * A callback URL for OAuth
      * A detailed description of what you plan to use the API for

      Please send your OAuth Client request to `info@dossierdata.nl`.

      #### Login
      When you've received your client credentials, you can prompt your users for an access token access. They need to login
      with their DossierData account and approve that your client can access their data. After this process you obtain an
      access key.

      ### Authentication
      Requesting any endpoint except the authentication will require you to send an access token, this can be done in
      two-ways. Either by Header of in the Query of the request.
  - name: Authorization
    description: |-
      This section lists basic information about the authorization process.

      The two requests that you need for the authorization process are:

      + `/oauth/authorize`

      + `/oauth/access_token`
  - name: Customer
    description: Endpoint for Customer resource management
servers:
  - url: https://{subdomain}.ddat.nl/api/customer
    variables:
      subdomain:
        default: test
components:
  requestBodies:
    Customer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
    CreateDocument:
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - name
              - content
            properties:
              name:
                type: string
                description: Name of the document
              content:
                type: string
                format: binary
                description: The binary content of the file
          examples:
            CreateDocumentExample:
              value:
                name: 'New document name'
                content: 'binary document content'
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://test.ddat.nl/api/v1/oauth/authorize
          tokenUrl: https://test.ddat.nl/api/v1/oauth/access_token
          scopes:
            'customer_api:addresses': View addresses
            'customer_api:customer': View customer info
            'customer_api:customer_messages': View customer messages
            'customer_api:damages': View damages
            'customer_api:documents': View documents
            'customer_api:income': View income
            'customer_api:living': View current living condition
            'customer_api:mortgages': View mortgages
            'customer_api:notes': View notes
            'customer_api:obligations': View obligations
            'customer_api:policies': View policies
            'customer_api:possessions': View posessions
            'customer_api:retirement': View retirement
            'customer_api:tasks': View tasks
            'customer_api:tenant': View tenant info
            'customer_api:update_customer': Update customer
  schemas:
    Created:
      type: object
      properties:
        success:
          type: boolean
          description: Success true or false
        id:
          type: string
          description: Id of stored data (can be empty on array inserts)
    Deleted:
      type: object
      properties:
        success:
          type: boolean
          description: Success true or false
        id:
          type: string
          description: Id of deleted data (can be empty on array inserts)
    Updated:
      type: object
      properties:
        success:
          type: boolean
          description: Success true or false
        id:
          type: string
          description: Id of updated data (can be empty on array inserts)
    Meta:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
    Pagination:
      type: object
      properties:
        total:
          type: number
          description: Total number of objects
        count:
          type: number
          description: Object on this page
        per_page:
          type: number
          description: Object per page
        current:
          type: number
          description: Current page number
        total_pages:
          type: number
          description: Total number of pages
        links:
          type: object
          description: Array of meta links
          properties:
            self:
              type: string
              description: Link to the current page
            first:
              type: string
              description: Link to the first page
            prev:
              type: string
              description: Link to the previous page
            next:
              type: string
              description: Link to the next page
            last:
              type: string
              description: Link to the last page
    Customer:
      type: object
      required:
        - first_name
        - last_name
        - date_of_birth
      properties:
        id:
          type: string
          description: The id of the customer.
        full_name:
          type: string
          description: Formatted full name of the customer, e.g. "Initials (First names) suffix Last name"
        initials:
          type: string
          description: Initials of the customer.
        first_name:
          type: string
          description: FirstName of the customer.
        suffix:
          type: string
          description: Suffix of the customer.
        last_name:
          type: string
          description: LastName of the customer.
        date_of_birth:
          type: string
          description: Date of birth of the customer according to ISO8601.
        age:
          type: number
          description: Age of the customer.
        sex:
          $ref: "#/components/schemas/GenderEnum"
        marital_status:
          $ref: "#/components/schemas/MaritalStatusEnum"
        email_address:
          type: string
          description: Email address of the customer.
        phone:
          type: string
          description: The customer's primary phone number.
        mobile:
          type: string
          description: The customer's primary mobile number.
        retirement_date:
          type: string
          description: Date of retrirement of the customer according to ISO8601.
        username:
          type: string
          description: Username of the customer.
    Family:
      type: object
      properties:
        customer:
          $ref: '#/components/responses/Customer'
        partner:
          $ref: '#/components/responses/Customer'
        children:
          type: array
          items:
            $ref: '#/components/responses/Customer'
    Damage:
      type: object
      required:
        - customer_id
      properties:
        customer_id:
          type: number
          description: ID of customer
        damage_number:
          type: string
          description: Number of damage
        licenseplate:
          type: string
          description: License plate of car of the insuree involved in damage
        policy_id:
          type: number
          description: ID of policy
        insurance_branche_code:
          type: number
          description: Branche code of insurance company
        policy_contractNumber:
          type: string
          description: Contract number of policy
        insurance_agency_id:
          type: number
          description: ID of insurance agency
        settled:
          type: boolean
          description: Is the damage settled?
        date:
          type: string
          description: Date when damage occured
        blame:
          type: boolean
          description: Is the insuree to blame?
        cause:
          type: string
          description: Cause of the damage
        notes:
          type: string
          description: Notes belonging to damage
        agency_id:
          type: number
          description: ID of agency
        agency_contact_id:
          type: number
          description: ID of contact of agency
        agency_contact:
          type: string
          description: Name of agency contact
        agency_phone:
          type: string
          description: Phone number of agency
        agency_emailaddress:
          type: string
          description: Email address of agency
        external_number:
          type: string
          description: External number of damage
        wa:
          type: number
          description: Liability insurance
        casco:
          type: number
          description: Insurance of object involved in damage (casco)
        deductible:
          type: number
          description: Amount that is deductible
        garage_id:
          type: number
          description: ID of garage involved
        garage_contact_id:
          type: number
          description: ID of contact of garage involved
        user_id:
          type: number
          description: ID of user
        trackingNumber:
          type: string
          description: Tracking number
        expert_id:
          type: number
          description: ID of expert involved
        expert_case_number:
          type: string
          description: Case number of expert
        pay_to:
          type: number
          description: Pay to
        status:
          type: number
          description: Status
        wa_at:
          type: string
          description: Liable at
        casco_at:
          type: string
          description: Casco at
        deductible_at:
          type: string
          description: Deductible at
        estimated:
          type: number
          description: Estimation
    DocumentCategory:
      type: object
      properties:
        id:
          type: string
          description: Document categorie id
        name:
          type: string
          description: Document categorie naam
        description:
          type: string
          description: Document categorie omschrijving
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
    Document:
      type: object
      properties:
        id:
          type: string
          description: Document id (hashed)
        type:
          type: string
          description: Type object waar het document aan gekoppeld is
        name:
          type: string
          description: Naam van het document
        slug:
          type: string
          description: Slug naam van het document
        link:
          type: string
          description: Document download link
    Mortgage:
      type: object
      required:
        - customer_id
      properties:
        customer_id:
          type: number
          description: ID of the customer
        hypotheeknummer:
          type: string
          description: Number of mortgage
        koopsom:
          type: number
          description: Buying price of property
        onderpandsgegevens:
          type: string
          description: Credentials of collateral
        redenHypotheek:
          type: string
          description: Reason of mortgage
        hoofdsomHypotheek:
          type: number
          description: Main sum mortgage
        hypotheciareInschrijving:
          type: string
          description: Mortgage  registration
        taxateur_id:
          type: number
          description: ID of appraiser
        marktwaarde:
          type: number
          description: Market value of property
        datumTaxatie:
          type: string
          description: Date of taxation
        wozWaarde:
          type: number
          description: Cadastral value
        wozDatum:
          type: string
          description: Date of cadastral
        totaalSom:
          type: number
          description: Total sum
        bouwdepot:
          type: string
          description: Building fund of mortgage
        notaris_id:
          type: number
          description: ID of notary
        passeerdatum:
          type: string
          description: Date when the mortgage papers are signed by the notary
        verkopendMakelaar_id:
          type: number
          description: ID of realtor
        geldverstrekker_id:
          type: number
          description: ID of company that gave the mortgage
        label_id:
          type: number
          description: ID of label
        nhg:
          type: boolean
          description: Is mortgage under Nationale Hypotheek Garantie (NHG)?
        rate:
          type: number
          description: Rate of mortgage
        rangorde:
          type: number
          description: Rank of mortgage
        status:
          type: number
          description: Status of mortgage
        getekend:
          type: string
          description: Date of signing
        voor_verlenging:
          type: string
          description: Date before extension
        na_verlening:
          type: string
          description: Date after extension
        financiering:
          type: string
          description: Date of financing
        bankgarantie:
          type: string
          description: Date of bank guarantee
        passeerdatumVoortgang:
          type: string
          description: Date of passing date progress
        collateral_address:
          type: string
          description: Collateral address of mortgage
        collateral_city:
          type: string
          description: Collateral city of mortgage
        collateral_postcode:
          type: string
          description: Collateral postal code of mortgage
        collateral_housenumber:
          type: string
          description: Collateral house number of mortgage
        collateral_county:
          type: string
          description: Collateral county of mortgage
        restantHoofdsom:
          type: number
          description: Remainder of total sum of mortgage
        executiewaarde:
          type: number
          description: Execution value of mortgage
        type_woning:
          type: number
          description: ID type of property
        offerteNummer:
          type: number
          description: Quotation of mortgage
        datumAanvraag:
          type: string
          description: Date of application
        datumOfferte:
          type: string
          description: Date of quotation
        datumGeldigheidOfferte:
          type: string
          description: Date of validity for quotation
        datumOfferteGetekend:
          type: string
          description: Date of quotation signed
        vovVoorVerbouwing:
          type: number
          description: Vrije onderhandse verkoopwaarde (VOV) before construction
        vovNaVerbouwing:
          type: number
          description: Vrije onderhandse verkoopwaarde (VOV) after construction
        ewVoorVerbouwing:
          type: number
          description: Execution value before construction
        ewNaVerbouwing:
          type: number
          description: Execution value after construction
        trackingNumber:
          type: number
          description: Tracking number of mortgage
        collateral_addition:
          type: string
          description: Collateral addition of mortgage
        purchasing_broker_id:
          type: number
          description: ID of purchasing broker
        validity_unsigned_offer_date:
          type: string
          description: Validity of unsigned offer date
        validity_signed_offer_date:
          type: string
          description: Validity of signed offer date
        end_financing_reservation_date:
          type: string
          description: End of financing reservation date
        has_bank_guarantee_date:
          type: string
          description: Date of bank guarantee
        bank_guarantee_date:
          type: string
          description: Date of bank guarantee
        mortgage_property_id:
          type: number
          description: ID of mortgage property
        financier_agency_id:
          type: number
          description: ID of financier agency
        arrangement_type:
          type: number
          description: ID of arrangement
        existing_mortgage_number:
          type: string
          description: Number of existing mortgage number
        own_resources_amount:
          type: number
          description: Amount of own resources
        mutation_code:
          type: number
          description: Code of mutation of mortgage
        is_property_purchase:
          type: boolean
          description: Is property purchased?
        bank_guarantee_costs:
          type: number
          description: Costs of bank guarantee
        net_consultancy_costs:
          type: number
          description: Net consultancy costs
        mortgage_deed_cost_specification:
          type: number
          description: Costs of mortgage deed
        national_mortgage_guarantee_costs:
          type: number
          description: National mortgage guarantee costs
        fine_interest:
          type: number
          description: Fine intereset of mortgage
        loan_type:
          type: string
          description: Type of loan
        secondary_customer_id:
          type: number
          description: ID of secondary customer
        loan_to_value:
          type: number
          description: Value to loan of mortgage
        risk_class:
          type: number
          description: Risk class of mortgage
        risk_class_type:
          type: number
          description: Type of risk class of mortgage
    MortgagePart:
      type: object
      required:
        - mortgage_id
      properties:
        mortgage_id:
          type: number
          description: ID of mortgage
        hypotheeknummer:
          type: string
          description: Number of mortgage
        leningdeelnummer:
          type: string
          description: Part number of loan
        soortLening:
          type: string
          description: Sort of loan
        hoofdsom:
          type: number
          description: Main price
        begindatum:
          type: string
          description: Start date
        einddatum:
          type: string
          description: End date
        rente:
          type: number
          description: Interest
        rentevasteperiode:
          type: string
          description: Fixed interest period
        einddatumRentevast:
          type: string
          description: End date of fixed interest period
        created_at:
          type: string
          description: Timestamp of creation
        updated_at:
          type: string
          description: Timestamp of last updated
        begindatumRentevast:
          type: string
          description: Start date of fixed interest period
        renteType:
          type: number
          description: Type of intereset
        duur:
          type: number
          description: Duration
        hypotheekType:
          type: number
          description: Type of mortgage
        afsluitprovisie:
          type: number
          description: Commission
        bedenktijd:
          type: boolean
          description: Time for consideration
        bedenktijdStartDatum:
          type: string
          description: Start date of consideration
        type:
          type: number
          description: Type
        agency_code:
          type: string
          description: Code of agency
        tax_box_type:
          type: number
          description: The tax box type number
        repayment_type:
          type: number
          description: Type of repayment
        interest_agreement_type:
          type: number
          description: Type of interest agreement
        interest_cooling_off_period_type:
          type: number
          description: Type of interest cooling off period type
        interest_cooling_off_period_in_months:
          type: number
          description: Type of interest colling off period in months
        payment_term:
          type: number
          description: Payment term
        consumptive_percentage:
          type: number
          description: Consumptive percentage
        consumptive_amount:
          type: number
          description: Consumptive amount
        national_mortgage_guarantee:
          type: boolean
          description: National mortgage guarantee
        coverage_percentage:
          type: number
          description: Coverage percentage
        rate_based_on:
          type: number
          description: Rate based on
      description: >
        A mortgage part is one of the parts that makes up the mortgage.
    MortgageProgress:
      type: object
      required:
        - mortgage_id
      properties:
        id:
          type: number
          description: Id of mortgage
        mortgage_id:
          type: string
          description: The id of the mortgage
        name:
          type: string
          description: The name of the progress item (e.g. document name)
        received:
          type: boolean
          description: Boolean indicating if the progress item has been received from the customer
        sent:
          type: number
          description: Boolean indicating if the progress item has been sent to the financier
        completed:
          type: string
          description: Boolean indicating if the progress item has been approved by the financier
        comment:
          type: string
          description: Optional comment on the progress item with a reason why a document was declined or optional requests.
        created_at:
          type: string
          description: Timestamp of creation
        updated_at:
          type: string
          description: Timestamp of latest update
      description: >
        A mortgage progress item is an item that keeps track of the progress of a document and for example the documents
        still needs to supply.
    User:
      type: object
      properties:
        id:
          type: number
          description: ID of user
        first_name:
          type: string
          description: First name of the user
        last_name:
          type: number
          description: Last name of the user
        email:
          type: string
          description: Email address of the user
        fullname:
          type: string
          description: Full name of the user
        active:
          type: boolean
          description: Describes if the user is active (and can login)
        preferred_office_id:
          type: number
          description: The user's preferred office id
      description: >
        An user model is a user of the application and can be marked as the advisor of a customer.
    Search:
      type: object
      properties:
        id:
          type: number
          description: ID of search
        name:
          type: string
          description: Name of search
        content:
          type: string
          description: Content of search
        user_id:
          type: number
          description: ID of user
        public:
          type: boolean
          description: Is search public?
        created_at:
          type: string
          description: Timestamp of creation
        updated_at:
          type: string
          description: Timestamp of latest update
      description: >
        A search model contains a user defined query which can be used to find and export data. It can also be used as
        a data source for a signal.
    Living:
      type: object
      properties:
        type:
          type: string
          description: ''
        type_description:
          type: string
          description: ''
        real_estate_value:
          type: string
          description: ''
        market_value:
          type: string
          description: ''
        percentage_owner:
          type: string
          description: ''
        leasehold_canon:
          type: string
          description: ''
        property_type:
          type: string
          description: ''
        property_type_description:
          type: string
          description: ''
        property_purpose:
          type: string
          description: ''
        property_purpose_description:
          type: string
          description: ''
        sale_price:
          type: string
          description: ''
        sale_costs:
          type: string
          description: ''
        date_of_delivery:
          type: string
          description: ''
        basic_rent:
          type: string
          description: ''
        service_costs:
          type: string
          description: ''
        rental_increase_rate:
          type: string
          description: ''
        rental_costs:
          type: string
          description: ''
        other_costs:
          type: string
          description: ''
        contract_owner:
          type: string
          description: ''
        living_together:
          type: string
          description: ''
        energy_label:
          type: string
          description: ''
        energy_label_end_date:
          type: string
          description: ''
        country:
          type: string
          description: ''
        province:
          type: string
          description: ''
        county:
          type: string
          description: ''
        city:
          type: string
          description: ''
        district:
          type: string
          description: ''
        neighborhood:
          type: string
          description: ''
        street:
          type: string
          description: ''
        postcode:
          type: string
          description: ''
        number:
          type: string
          description: ''
        number_addition:
          type: string
          description: ''
        lat:
          type: string
          description: ''
        lng:
          type: string
          description: ''
        sale_status:
          type: string
          description: ''
        for_sale:
          type: string
          description: ''
        sold:
          type: string
          description: ''
        price:
          type: string
          description: ''
        price_type:
          type: string
          description: ''
        price_kind:
          type: string
          description: ''
        purchase_price:
          type: string
          description: ''
        mortgage_original:
          type: string
          description: ''
        mortgage_remaining:
          type: string
          description: ''
        mortgage:
          type: string
          description: ''
        debt_market_value_ratio_original:
          type: string
          description: ''
        debt_market_value_ratio:
          type: string
          description: ''
        basis_of_property_tax_rate:
          type: string
          description: ''
        woz_value_home:
          type: string
          description: ''
        property_tax_rate:
          type: string
          description: ''
        notary_id:
          type: string
          description: ''
        selling_broker_id:
          type: string
          description: ''
        buying_agent_id:
          type: string
          description: ''
        appraiser_id:
          type: string
          description: ''
        waste_charges:
          type: string
          description: ''
        sewage_charges:
          type: string
          description: ''
        value_low:
          type: string
          description: ''
        value_high:
          type: string
          description: ''
        value_quality:
          type: string
          description: ''
        built:
          type: string
          description: ''
        size:
          type: string
          description: ''
        plot_size:
          type: string
          description: ''
        purpose:
          type: string
          description: ''
        sub_purpose:
          type: string
          description: ''
        apartment_type:
          type: string
          description: ''
        apartment_sub_type:
          type: string
          description: ''
        residential_building_type:
          type: string
          description: ''
        residential_building_sub_type:
          type: string
          description: ''
        acceptance:
          type: string
          description: ''
        acceptance_addition:
          type: string
          description: ''
        acceptance_date:
          type: string
          description: ''
        label_class:
          type: string
          description: ''
        label_type:
          type: string
          description: ''
        performance_index:
          type: string
          description: ''
        performance_coefficient:
          type: string
          description: ''
        valid_until:
          type: string
          description: ''
        for_sale_since:
          type: string
          description: ''
        sold_since:
          type: string
          description: ''
        last_check:
          type: string
          description: ''
        since:
          type: string
          description: ''
        rate_class:
          type: string
          description: ''
        rate_class_original:
          type: string
          description: ''
        structural_engineer_id:
          type: number
          description: ''
      description: >
        A current living condition of the customer
    NotFound:
      type: object
      properties:
        succes:
          type: boolean
        error:
          type: object
          properties:
            code:
              type: number
              description: Code of the error
            name:
              type: string
              description: A description of the error if available
      description: A resource we could not find
    Unauthorized:
      type: object
      properties:
        success:
          type: boolean
        error:
          type: string
          description: The type of error
        error_description:
          type: string
          description: A detailed description of the error
      description: An authorized action
    UnprocessableEntity:
      type: object
      properties:
        success:
          type: boolean
        error:
          type: object
          description: A description of the error
          properties:
            code:
              type: string
            message:
              type: string
            errors:
              type: array
              items:
                type: string
      description: An unprocessable entity for which validation failed
    BadRequest:
      type: object
      properties:
        error:
          type: string
        error_description:
          type: string
      description: A bad request
    CategoryEnum:
      type: number
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
      description: >
        An enum describing all categories of items found on the customer dashboard

        Category:
          * `1` - Customer
          * `2` - Banking
          * `3` - Insurance
          * `4` - Damage
          * `5` - Mortgage
          * `6` - Mailing
          * `7` - Dossier
          * `8` - Credit
          * `9` - Income
          * `10` - Retirement
          * `11` - Possession
          * `12` - Obligation
          * `13` - Current living condition
    SalutationEnum:
      type: number
      enum:
        - null
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 99
      description: >
        An enum that describes all education level types.
         - `null`: Empty
         - `0` The Lord (De heer)
         - `1` Mrs (Mevrouw)
         - `2` Miss (Mejuffrouw)
         - `3` Mr. Mrs (Dhr/Mevr)
         - `4` Family (Familie)
         - `5` The Ladies (De dames)
         - `6` The Heritage Of (De erven van)
         - `7` The Management Of (De directie van)
         - `8` The Board Of (Het bestuur van)
         - `9` The Firmants Of (De firmanten van)
         - `10` Society (Maatschap)
         - `11` Firma (Firma)
         - `12` Foundation (Stichting)
         - `13` Owners Association (Vereniging van eigenaren)
         - `14` Vof (V.O.F.)
         - `15` To The Attention Of (Ter attentie van)
         - `99` Unknown (Onbekend)
    MaritalStatusEnum:
      type: number
      enum:
        - null
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
      description: >
        An enum that describes all marital statuses.
         - `null`: Unknown
         - `0`: Single
         - `1`: Married joint assets
         - `2`: Married with prenup
         - `3`: Married foreign law
         - `4`: Divorced
         - `5`: Resident
         - `6`: Partner registration joint assets
         - `7`: Partner registration with prenup
         - `8`: Cohabitation with prenup
         - `9`: Cohabitation without prenup
         - `10`: Widow
    CustomerTypeEnum:
      type: number
      enum:
        - null
        - 1
        - 2
        - 7
        - 9
        - 11
        - 12
        - 13
        - 14
      description: >
        An enum that describes all customer types.
          - `null`: Unknown
          - `1`: Private
          - `2`: Expiring
          - `7`: Expired
          - `9`: Business
          - `11`: Business expired
          - `12`: Lead
          - `13`: Mortgage lead
          - `14`: Insurance lead
    GenderEnum:
      type: number
      enum:
        - null
        - 0
        - 1
      description: >
        An enum that describes all genders.
          - `null`: Unknown
          - `0`: Female
          - `1`: Male
    TenantInfo:
      type: object
      properties:
        name:
          type: string
        logo:
          type: string
        header:
          type: string
        full_name:
          type: string
        website:
          type: string
        primary_color:
          type: string
        secondary_color:
          type: string
        tertiary_color:
          type: string
        use_slogan:
          type: boolean
        use_contact_email:
          type: boolean
        use_support_email:
          type: boolean
        slogan:
          type: string
        contact_email:
          type: string
        support_email:
          type: string
    Task:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        status:
          type: integer
        description:
          type: string
        date:
          type: string
        time:
          type: string
    Policy:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        descriptions:
          type: string
        is_package:
          type: boolean
        parent_id:
          type: number
        start_date:
          type: string
        expiration_date:
          type: string
        contract_expiration_date:
          type: string
        package_number:
          type: string
        contract_number:
          type: string
        tracking_number:
          type: string
        insured_amounts:
          type: array
          items:
            type: number
        claim_free_years:
          type: number
        mutation_code:
          type: number
        agency:
          type: string
        total_term_amount:
          type: string
        status:
          type: object
          properties:
            description:
              type: string
            color:
              type: string
        description:
          type: string
        mutation_date:
          type: string
        mutation_reason:
          type: string
        duration:
          type: number
        active:
          type: boolean
        payment_term:
          type: number
        payment_term_description:
          type: string
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
          examples:
            UnauthorizedScopeExample:
              $ref: '#/components/examples/BadScopeRequestExample'
            UnauthorizedExample:
              $ref: '#/components/examples/BadRequestExample'
    BadScopeRequest:
      description: Bad Scope Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequest'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/BadScopeRequestExample'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnauthorizedExample'
    ClientUnauthorized:
      description: Client Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Unauthorized'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/ClientUnauthorizedExample'
    NotFound:
      description: This specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFound'
          examples:
            NotFoundExample:
              $ref: '#/components/examples/NotFoundExample'
    UnprocessableEntity:
      description: The given data did not pass validation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableEntity'
          examples:
            UnauthorizedExample:
              $ref: '#/components/examples/UnprocessableEntityExample'
    Created:
      description: The resource was succesfully created
      headers: { }
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Created'
          examples:
            CreatedExample:
              $ref: '#/components/examples/CreatedExample'
    Updated:
      description: The resource was succesfully updated
      headers: { }
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Updated'
          examples:
            CreatedExample:
              $ref: '#/components/examples/UpdatedExample'
    Deleted:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Deleted'
          examples:
            DeletedExample:
              $ref: '#/components/examples/DeletedExample'
    CustomerURI:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  uri:
                    type: string
          examples:
            response:
              value:
                data:
                  uri: "https://uri"
    PaginatedDocumentsResponse:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Document'
          examples:
            DocumentExample:
              $ref: '#/components/examples/DocumentExample'
    Customer:
      description: A customer resource
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Customer'
          examples:
            CustomerExample:
              $ref: '#/components/examples/CustomerExample'
    Family:
      description: A family resource
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Family'
    Mortgage:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Mortgage'
          examples:
            MortgageExample:
              $ref: '#/components/examples/MortgageExample'
    PaginatedMortgages:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Mortgage'
              meta:
                $ref: '#/components/schemas/Meta'
          examples:
            PaginatedMortgagesExample:
              $ref: '#/components/examples/PaginatedMortgagesExample'
    MortgagePart:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/MortgagePart'
          examples:
            MortgagePartExample:
              $ref: '#/components/examples/MortgagePartExample'
    PaginatedMortgageParts:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/MortgagePart'
              meta:
                $ref: '#/components/schemas/Meta'
          examples:
            PaginatedMortgagePartsExample:
              $ref: '#/components/examples/PaginatedMortgagePartsExample'
    MortgageProgressResponse:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/MortgageProgress'
          examples:
            MortgageProgressResponseExample:
              $ref: '#/components/examples/MortgageProgressResponseExample'
    Damage:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Damage'
          examples:
            DamageExample:
              $ref: '#/components/examples/DamageExample'
    PaginatedDamages:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Damage'
              meta:
                $ref: '#/components/schemas/Meta'
          examples:
            PaginatedDamagesExample:
              $ref: '#/components/examples/PaginatedDamagesExample'
    DocumentResponse:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Document'
          examples:
            DocumentExample:
              $ref: '#/components/examples/DocumentExample'
    DocumentsTreeResponse:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentCategory'
          examples:
            DocumentsTreeExample:
              $ref: '#/components/examples/DocumentsTreeExample'
    LivingResponse:
      description: OK
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Living'
          examples:
            DocumentsTreeExample:
              $ref: '#/components/examples/LivingExample'
    TenantInfoResponse:
      description: Tenant info response
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/TenantInfo'
          examples:
            TenantInfoResponseExample:
              $ref: '#/components/examples/TenantInfoExample'
    TaskResponse:
      description: Task response
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Task'
          examples:
            TaskResponseExample:
              $ref: '#/components/examples/TaskResponseExample'
    MessagesResponse:
      description: Messages response. Not implemented
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: number
          examples:
            MessagesResponseExample:
              value:
                data:
                  - id: 1
    PostMessageResponse:
      description: Post messages response. Not implemented
      headers: { }
      content:
        application/json:
          schema:
            type: object
    PolicyResponse:
      description: Policy response
      headers: { }
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Policy'
          examples:
            PolicyResponseExample:
              $ref: '#/components/examples/PolicyResponseExample'
  examples:
    BadRequestExample:
      summary: 400 No access token
      description: Your request is missing required oauth paramenters, check that the access_token is passed correctly
      value:
        error: invalid_request
        error_description: The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the "access token" parameter.
    BadScopeRequestExample:
      summary: 400 Invalid scope(s)
      description: Your access token doesn't have the correct scopes. You will probably need to request a new one which includes the scope(s) for this endpoint.
      value:
        success: false
        error:
          code: 400
          message: Invalid scope(s) provided
    UnauthorizedExample:
      summary: 401 Unauthorized
      description: Your client doesn't have access to this tenant or endpoint
      value:
        success: false
        error: access_denied
        error_description: The resource owner or authorization server denied the request.
    ClientUnauthorizedExample:
      summary: 401 Unauthorized
      value:
        success: false
        error: invalid_client
        error_description: Client authorization failed.
    NotFoundExample:
      summary: 404 Not Found
      description: The requested resource could not be found
      value:
        success: false
        error:
          code: 404
          description: No query results for model [model] 1
    UnprocessableEntityExample:
      summary: 422 Unprocessable Entity
      description: >-
        There was a problem processing your request, this is because one or more values did not pass validation.


        Check the `errors` element in the response for detailed descriptions about the validation rules that failed.
      value:
        success: false
        error:
          code: 1
          message: The given data was invalid.
          errors:
            property_name:
              - Validation error
    PaginationExample:
      summary: Pagination
      value:
        pagination:
          total: 1
          count: 1
          per_page: 15
          current: 1
          total_pages: 1
          links: [ ]
    CreatedExample:
      summary: 200 OK
      value:
        success: true
        id: "1"
    UpdatedExample:
      summary: 200 OK
      value:
        success: true
        id: "1"
    DeletedExample:
      summary: 200 OK
      value:
        success: true
        id: "1"
    CustomerExample:
      summary: 200 OK
      value:
        data:
          id: ABLKJfj2lk34
          full_name: A. B. de Vries (Albert)
          initials: AB
          first_name: Albert
          suffix: de
          last_name: Vries
          date_of_birth: "1959-06-18T00:00:00+01:00"
          age: 18
          sex: 1
          marital_status: 0
          emailaddress: "ab.de.vries@test.nl"
          phone: "0512345678"
          mobile: "0612345678"
          phone_work: "0512345678"
          retirement_date: "2026-06-18T00:00:00+01:00"
          username: "johndoe"
    DossiersExample:
      value:
        data:
          uuid: "39b304f1-051e-412c-94cb-71f46892d455"
          customer_id: "1234"
          status: 1
    PaginatedDossiersExample:
      value:
        data:
          - uuid: "39b304f1-051e-412c-94cb-71f46892d455"
            customer_id: "1234"
            status: 1
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 15
            current: 1
            total_pages: 1
            links: [ ]
    PaginatedLettersExample:
      value:
        data:
          - name: Test letter
            address: Test
            content: Test
            customer_id: 1
            user_id: 1
            for_instance_class: 1
            for_instance_id: 1
            category_id: 1
            template_id: 1
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 15
            current: 1
            total_pages: 1
            links: [ ]
    MortgageExample:
      value:
        data:
          customer_id: 1
          hypotheeknummer: "12345678"
          koopsom: 250000
          onderpandsgegevens: Hoofdstraat 1, Hoofdstad
          redenHypotheek: Bestaande bouw
          hoofdsomHypotheek: 100000
          hypotheciareInschrijving: "150000"
          taxateur_id: 1
          marktwaarde: 250000
          datumTaxatie: 01-01-2018
          wozWaarde: 250000
          wozDatum: 01-01-2018
          totaalSom: 0
          bouwdepot: "25000"
          notaris_id: 1
          passeerdatum: 01-01-2018
          verkopendMakelaar_id: 1
          geldverstrekker_id: 1
          label_id: 1
          nhg: true
          rate: 1
          rangorde: 1
          status: 1
          getekend: 01-01-2018
          voor_verlenging: 01-01-2018
          na_verlening: 01-01-2018
          financiering: 01-01-2018
          bankgarantie: 01-01-20184
          passeerdatumVoortgang: 01-01-2018
          collateral_address: Teststraat
          collateral_city: Teststad
          collateral_postcode: 9123HH
          collateral_housenumber: "61"
          collateral_county: Netherlands
          restantHoofdsom: 500000
          executiewaarde: 100000
          type_woning: 1
          offerteNummer: 100
          datumAanvraag: 01-01-2018
          datumOfferte: 01-01-2018
          datumGeldigheidOfferte: 01-01-2018
          datumOfferteGetekend: 01-01-2018
          vovVoorVerbouwing: 200000
          vovNaVerbouwing: 250000
          ewVoorVerbouwing: 150000
          ewNaVerbouwing: 175000
          trackingNumber: 1
          collateral_addition: A
          purchasing_broker_id: 1
          validity_unsigned_offer_date: 01-01-2018
          validity_signed_offer_date: 01-01-2018
          end_financing_reservation_date: 401-01-2018
          has_bank_guarantee_date: 01-01-2018
          bank_guarantee_date: 01-01-2018
          mortgage_property_id: 1
          financier_agency_id: 1
          arrangement_type: 1
          existing_mortgage_number: "1"
          own_resources_amount: 1
          mutation_code: 1
          is_property_purchase: false
          bank_guarantee_costs: 50000
          net_consultancy_costs: 50000
          mortgage_deed_cost_specification: 5000
          national_mortgage_guarantee_costs: 5000
          fine_interest: 1
          loan_type: "14"
          secondary_customer_id: 1
          loan_to_value: 1
          risk_class: 1
          risk_class_type: 1
    PaginatedMortgagesExample:
      value:
        data:
          - customer_id: 1
            hypotheeknummer: "12345678"
            koopsom: 250000
            onderpandsgegevens: Hoofdstraat 1, Hoofdstad
            redenHypotheek: Bestaande bouw
            hoofdsomHypotheek: 100000
            hypotheciareInschrijving: "150000"
            taxateur_id: 1
            marktwaarde: 250000
            datumTaxatie: 01-01-2018
            wozWaarde: 250000
            wozDatum: 01-01-2018
            totaalSom: 0
            bouwdepot: "25000"
            notaris_id: 1
            passeerdatum: 01-01-2018
            verkopendMakelaar_id: 1
            geldverstrekker_id: 1
            label_id: 1
            nhg: true
            rate: 1
            rangorde: 1
            status: 1
            getekend: 01-01-2018
            voor_verlenging: 01-01-2018
            na_verlening: 01-01-2018
            financiering: 01-01-2018
            bankgarantie: 01-01-20184
            passeerdatumVoortgang: 01-01-2018
            collateral_address: Teststraat
            collateral_city: Teststad
            collateral_postcode: 9123HH
            collateral_housenumber: "61"
            collateral_county: Netherlands
            restantHoofdsom: 500000
            executiewaarde: 100000
            type_woning: 1
            offerteNummer: 100
            datumAanvraag: 01-01-2018
            datumOfferte: 01-01-2018
            datumGeldigheidOfferte: 01-01-2018
            datumOfferteGetekend: 01-01-2018
            vovVoorVerbouwing: 200000
            vovNaVerbouwing: 250000
            ewVoorVerbouwing: 150000
            ewNaVerbouwing: 175000
            trackingNumber: 1
            collateral_addition: A
            purchasing_broker_id: 1
            validity_unsigned_offer_date: 01-01-2018
            validity_signed_offer_date: 01-01-2018
            end_financing_reservation_date: 401-01-2018
            has_bank_guarantee_date: 01-01-2018
            bank_guarantee_date: 01-01-2018
            mortgage_property_id: 1
            financier_agency_id: 1
            arrangement_type: 1
            existing_mortgage_number: "1"
            own_resources_amount: 1
            mutation_code: 1
            is_property_purchase: false
            bank_guarantee_costs: 50000
            net_consultancy_costs: 50000
            mortgage_deed_cost_specification: 5000
            national_mortgage_guarantee_costs: 5000
            fine_interest: 1
            loan_type: "14"
            secondary_customer_id: 1
            loan_to_value: 1
            risk_class: 1
            risk_class_type: 1
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 15
            current: 1
            total_pages: 1
            links: [ ]
    MortgagePartExample:
      value:
        data:
          - mortgage_id: 1
            hypotheeknummer: "1"
            leningdeelnummer: "1"
            soortLening: lening
            hoofdsom: 150000
            begindatum: 01-01-2018
            einddatum: 01-01-2019
            rente: 4
            rentevasteperiode: "10"
            einddatumRentevast: 01-01-2019
            created_at: "2019-10-25T12:00:00+02:00"
            updated_at: "2019-10-25T13:00:00+02:00"
            begindatumRentevast: 2018-01-01
            renteType: 1
            duur: 360
            hypotheekType: 1
            afsluitprovisie: 0
            bedenktijd: false
            bedenktijdStartDatum: 2018-01-01
            type: 2
            agency_code: "1"
            tax_box_type: 3
            repayment_type: 1
            interest_agreement_type: 1
            interest_cooling_off_period_type: 1
            interest_cooling_off_period_in_months: 1
            payment_term: 1
            consumptive_percentage: 1
            consumptive_amount: 1
            national_mortgage_guarantee: true
            coverage_percentage: 1
            rate_based_on: 1
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 15
            current: 1
            total_pages: 1
            links: [ ]
    PaginatedMortgagePartsExample:
      value:
        data:
          - mortgage_id: 1
            hypotheeknummer: "1"
            leningdeelnummer: "1"
            soortLening: lening
            hoofdsom: 150000
            begindatum: 01-01-2018
            einddatum: 01-01-2019
            rente: 4
            rentevasteperiode: "10"
            einddatumRentevast: 01-01-2019
            created_at: "2019-10-25T12:00:00+02:00"
            updated_at: "2019-10-25T13:00:00+02:00"
            begindatumRentevast: 2018-01-01
            renteType: 1
            duur: 360
            hypotheekType: 1
            afsluitprovisie: 0
            bedenktijd: false
            bedenktijdStartDatum: 2018-01-01
            type: 2
            agency_code: "1"
            tax_box_type: 3
            repayment_type: 1
            interest_agreement_type: 1
            interest_cooling_off_period_type: 1
            interest_cooling_off_period_in_months: 1
            payment_term: 1
            consumptive_percentage: 1
            consumptive_amount: 1
            national_mortgage_guarantee: true
            coverage_percentage: 1
            rate_based_on: 1
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 15
            current: 1
            total_pages: 1
            links: [ ]
    MortgageProgressResponseExample:
      value:
        data:
          - id: 1
            mortgage_id: 1
            name: Testverklaring
            sent: true
            received: true
            completed: true
            comment: Comment
            date: 01-01-2018
            created_at: "2019-10-25T12:00:00+02:00"
            updated_at: "2019-10-25T13:00:00+02:00"
    PaginatedMortgageProgressExample:
      value:
        data:
          - id: 1
            mortgage_id: 1
            name: Testverklaring
            sent: true
            received: true
            completed: true
            comment: Comment
            date: 01-01-2018
            created_at: "2019-10-25T12:00:00+02:00"
            updated_at: "2019-10-25T13:00:00+02:00"
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 15
            current: 1
            total_pages: 1
            links: [ ]
    DamageExample:
      value:
        data:
          customer_id: 1
          damage_number: "700004"
          licenseplate: AA-BB-12
          policy_id: 564
          insurance_branche_code: 0
          policy_contractNumber: "702519615"
          insurance_agency_id: 0
          settled: true
          date: 2008-11-12
          blame: true
          cause: Letselschade, oorzaak onbekend
          notes: Notities
          agency_id: 8
          agency_contact_id: 0
          agency_contact: Jan Modaal
          agency_phone: "0612345678"
          agency_emailaddress: test@test.nl
          external_number: "0612345678"
          wa: 0
          casco: 500
          deductible: 200
          garage_id: 1
          garage_contact_id: 1
          user_id: 1
          trackingNumber: "5"
          expert_id: 1
          expert_case_number: "1"
          pay_to: 1
          status: 1
          wa_at: "1"
          casco_at: "1"
          deductible_at: "1"
          estimated: 1
    PaginatedDamagesExample:
      value:
        data:
          - customer_id: 1
            damage_number: "700004"
            licenseplate: AA-BB-12
            policy_id: 564
            insurance_branche_code: 0
            policy_contractNumber: "702519615"
            insurance_agency_id: 0
            settled: true
            date: 2008-11-12
            blame: true
            cause: Letselschade, oorzaak onbekend
            notes: Notities
            agency_id: 8
            agency_contact_id: 0
            agency_contact: Jan Modaal
            agency_phone: "0612345678"
            agency_emailaddress: test@test.nl
            external_number: "0612345678"
            wa: 0
            casco: 500
            deductible: 200
            garage_id: 1
            garage_contact_id: 1
            user_id: 1
            trackingNumber: "5"
            expert_id: 1
            expert_case_number: "1"
            pay_to: 1
            status: 1
            wa_at: "1"
            casco_at: "1"
            deductible_at: "1"
            estimated: 1
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 15
            current: 1
            total_pages: 1
            links: [ ]
    DocumentExample:
      value:
        data:
          name: Testverklaring voor testverzekering
          type: Microsoft Outlook
          mime_type: application/pdf
          customer_id: 1
          documentcategory_id: 1
          extension: pdf
          migrated: true
          filesize: 1000
          decoded: true
          user_id: 1
    DocumentsTreeExample:
      value:
        data:
          - id: CATEGORIE
            name: Categorie
            description:
              id: 1
              name: Klanten
            documents:
              - id: 12345
                type: Klant
                name: Mijn document
                slug: slug
                link: https://subdomain.ddat.nl/api/customer/document/12345
    CustomerByRelationNumberExample:
      value:
        number: 'external_relation_number_123'
        relation_number_type_id: 1
    LivingExample:
      value:
        data:
    TenantInfoExample:
      value:
        data:
          name: Test
          logo: base64 encoded binary string
          header: base64 encoded binary string
          full_name:
          website: test.nl
          primary_color: red
          secondary_color: blue
          tertiary_color: green
          use_slogan: true
          use_contact_email: true
          use_support_email: false
          slogan: Awesome slogan
          contact_email: contact@test.nl
          support_email:
    TaskResponseExample:
      value:
        data:
          - id: 1
            title: Task title
            status: 0
            description: Detailed description
            date: '2021-10-26'
            time: '12:00'
    PolicyResponseExample:
      value:
        data:
          - id: 1

  parameters:
    PerPage:
      name: perPage
      in: query
      description: The maximum number of objects to return
      required: false
      example: "25"
      schema:
        type: integer
        default: 15
    Page:
      name: page
      in: query
      description: The page number
      required: false
      example: "1"
      schema:
        type: integer
        default: 1
    JsonHeader:
      name: Accept
      in: header
      description: Provide the desired response type. If this is not provided error messages might be rendered as a generic 500 html page.
      required: true
      example: application/json
      schema:
        type: string
        enum:
          - application/json
    AddressId:
      name: address_id
      in: path
      description: The id of the address
      required: true
      example: "1"
      schema:
        type: integer
    CountryId:
      name: country_id
      in: path
      description: The ID or of the country.
      required: true
      example: "1"
      schema:
        type: integer
    CustomerId:
      name: customer_id
      in: path
      description: The ID or of the customer.
      required: true
      example: "1"
      schema:
        type: integer
    CustomerIdOrUUId:
      name: customer_id_or_uuid
      in: path
      description: The ID or UUID of the customer.
      required: true
      example: "1"
      schema:
        type: string
    DossierId:
      name: dossier_id
      in: path
      description: The id of the dossier
      required: true
      example: "1"
      schema:
        type: integer
    EmailAccountId:
      name: emailAccount_id
      in: path
      description: The id of the emailaccount
      required: true
      example: "1"
      schema:
        type: integer
    LetterId:
      name: letter_id
      in: path
      description: The id of the letter
      required: true
      example: "1"
      schema:
        type: integer
    LockId:
      name: lock_id
      in: path
      description: The id of the lock
      required: true
      example: "1"
      schema:
        type: integer
    MortgageId:
      name: mortgage_id
      in: path
      description: The id of the mortgage
      required: true
      example: "1"
      schema:
        type: integer
    MortgagePartId:
      name: mortgagePart_id
      in: path
      description: The id of the mortgagePart
      required: true
      example: "1"
      schema:
        type: integer
    MortgageProgressId:
      name: mortgageProgress_id
      in: path
      description: The id of the mortgageProgress
      required: true
      example: "1"
      schema:
        type: integer
    DamageId:
      name: damage_id
      in: path
      description: The id of the damage
      required: true
      example: "1"
      schema:
        type: integer
    DocumentId:
      name: document_id
      in: path
      description: The id of the document
      required: true
      example: "1"
      schema:
        type: string
    EmailId:
      name: email_id
      in: path
      description: The id of the email
      required: true
      example: "1"
      schema:
        type: integer
    TemplateId:
      name: template_id
      in: path
      description: The id of the template
      required: true
      example: "1"
      schema:
        type: integer
    NoteId:
      name: note_id
      in: path
      description: The id of the note
      required: true
      example: "1"
      schema:
        type: integer
    SignalId:
      name: signal_id
      in: path
      description: The id of the signal
      required: true
      example: "1"
      schema:
        type: integer
    AccountId:
      name: account_id
      in: path
      description: The id of the account
      required: true
      example: "1"
      schema:
        type: integer
    OfficeId:
      name: office_id
      in: path
      description: The id of the office
      required: true
      example: "1"
      schema:
        type: integer
    UserId:
      name: user_id
      in: path
      description: The id of the user
      required: true
      example: "1"
      schema:
        type: integer
    PortalInvitationId:
      name: portalInvitation_id
      in: path
      description: The id of the portal invitation
      required: true
      example: "1"
      schema:
        type: integer
    PortalInvitationToken:
      name: portalInvitation_token
      in: path
      description: The token of the portal invitation
      required: true
      example: "oTicierOsEuGAlDruNDELERCulGABASkIDeClINERMiSPENTATErEvIGhANDIeLAIRepTORsycHawnSiBleDpieNGOUSCONiDIAS"
      schema:
        type: string
    RelationNumberId:
      name: relationNumber_id
      in: path
      description: The id of the relation number
      required: true
      example: "1"
      schema:
        type: number
    RelationNumberTypeId:
      name: relationNumberType_id
      in: path
      description: The id of the relation number type
      required: true
      example: "1"
      schema:
        type: number
    SearchId:
      name: search_id
      in: path
      description: The id of the search
      required: true
      example: "1"
      schema:
        type: integer
    AXMessageId:
      name: ax_message_id
      in: path
      description: The id of the AX Message
      required: true
      example: "1"
      schema:
        type: integer
    TaskId:
      name: task_id
      in: path
      description: The id of the task
      required: true
      example: "1"
      schema:
        type: integer
    CalendarEventId:
      name: event_id
      in: path
      description: The id of the event
      required: true
      example: "1"
      schema:
        type: integer
    CalendarId:
      name: calendar_id
      in: path
      description: The id of the calendar
      required: true
      example: "1"
      schema:
        type: integer
